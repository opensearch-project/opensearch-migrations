name: Jenkins

on:
  push:
    branches-ignore:
      - 'backport/**'
      - 'dependabot/**'
  pull_request_target:
    types: [opened, synchronize, reopened]

env:
  python-version: '3.11'

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  full-es68-e2e-aws-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check Github Actor is a Maintainer
        id: check-maintainer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          echo "Checking if $GITHUB_ACTOR is a maintainer..."

          # Query the API to get the actor's permissions
          permission=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "${{ github.api_url }}/repos/${{ github.repository }}/collaborators/${GITHUB_ACTOR}/permission" \
            | jq -r '.permission')

          echo "Actor permissions: $permission"
          echo "actor_permission=$permission" >> $GITHUB_ENV

          # Fail if the actor is not a maintainer
          if [ "$permission" != "admin" ] && [ "$permission" != "write" ]; then
            echo "::error::This workflow can only be triggered by a maintainer."
            exit 1
          fi
      - name: Sanitize branch and repo names
        env:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref || github.ref_name }}
          REPO_BASE: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
        id: sanitize-input
        run: |
          clean_branch_name=$(echo "$BRANCH_NAME" | tr -cd '[:alnum:]_\-\./')
          clean_repo_base=$(echo "$REPO_BASE" | tr -cd '[:alnum:]_\-\./')
          clean_repo_url="https://github.com/$clean_repo_base.git"
          echo "Running jenkins test on repo: $clean_repo_url and branch: $clean_branch_name"
          echo "branch_name=$clean_branch_name" >> $GITHUB_OUTPUT
          echo "pr_repo_url=$clean_repo_url" >> $GITHUB_OUTPUT
      - name: Jenkins Job Trigger and Monitor
        if: env.actor_permission == 'admin' || env.actor_permission == 'write'
        uses: lewijacn/jenkins-trigger@1.0.4
        with:
          jenkins_url: "https://migrations.ci.opensearch.org"
          job_name: "full-es68source-e2e-test"
          api_token: "${{ secrets.JENKINS_MIGRATIONS_GENERIC_WEBHOOK_TOKEN }}"
          job_params: "GIT_REPO_URL=${{ steps.sanitize-input.outputs.pr_repo_url }},GIT_BRANCH=${{ steps.sanitize-input.outputs.branch_name }}"
