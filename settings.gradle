/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/8.0.2/userguide/multi_project_builds.html
 */
import java.nio.file.Paths

plugins {
    id("com.gradle.enterprise") version("3.16.2")
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.7.0'
}

void addSubProjects(String path, File dir) {
    if (dir.isDirectory() == false) {
        return;
    }
    if (dir.name == 'buildSrc') {
        return;
    }
    if (new File(dir, 'build.gradle').exists() == false) {
        return;
    }
    if (findProject(dir) != null) {
        return;
    }

    final String projectName = "${path}:${dir.name}"
    include projectName

    project(projectName).projectDir = dir

    for (File subdir : dir.listFiles()) {
        addSubProjects(projectName, subdir)
    }
}

rootProject.name = 'OpensearchMigrations'
include 'commonDependencyVersionConstraints'
include 'coreUtilities'
include 'transformation'
include 'testHelperFixtures'
include 'RFS'
include 'CreateSnapshot'
include 'MetadataMigration'
include 'DocumentsFromSnapshotMigration'
include 'TrafficCapture:captureKafkaOffloader'
include 'TrafficCapture:captureOffloader'
include 'TrafficCapture:captureProtobufs'
include 'TrafficCapture:dockerSolution'
include 'TrafficCapture:nettyWireLogging'
include 'TrafficCapture:trafficCaptureProxyServer'
include 'TrafficCapture:trafficCaptureProxyServerTest'
include 'TrafficCapture:trafficReplayer'


addSubProjects(':TrafficCapture', Paths.get(rootProject.projectDir.getPath(), 'TrafficCapture', 'transformationPlugins').toFile())

if (System.getenv().containsKey("OS_MIGRATIONS_GRADLE_SCAN_TOS_AGREE_AND_ENABLED")) {
    gradleEnterprise {
        buildScan {
            publishAlways()
            termsOfServiceUrl = "https://gradle.com/terms-of-service"
            termsOfServiceAgree = "yes"
        }
    }
}
