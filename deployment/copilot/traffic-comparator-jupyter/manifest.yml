# The manifest for the "traffic-comparator-jupyter" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: traffic-comparator-jupyter
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: '/'
  # Bogus health check to pass startup
  healthcheck:
    path: '/'
    port: 8888
    success_codes: '200-405'
    healthy_threshold: 2
    unhealthy_threshold: 2
    interval: 15s
    timeout: 10s
    grace_period: 60s

network:
  connect: true
  vpc:
    security_groups: [ "${MIGRATION_COMPARATOR_EFS_SG_ID}" ]

# Configuration for your containers and service.
image:
  # Docker build arguments. For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/backend-service/#image-build
  build:
    dockerfile: ../TrafficCapture/dockerSolution/build/docker/jupyterNotebook/Dockerfile
  port: 8888

command: /bin/sh -c 'cd containerTC && pip3 install --editable ".[data]" && jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root'

storage:
  volumes:
    sharedSQLVolume: # This is a variable key and can be set to an arbitrary string.
      path: '/shared'
      read_only: false
      efs:
        id: ${MIGRATION_COMPARATOR_EFS_ID}

cpu: 512       # Number of CPU units for the task.
memory: 2048    # Amount of memory in MiB used by the task.
count: 1       # Number of tasks that should be running in your service.
exec: true     # Enable getting a shell to your container (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-exec.html).

environments:
  dev:
    count: 1               # Number of tasks to run for the "dev" environment.
    deployment:            # The deployment strategy for the "dev" environment.
      rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.