AWSTemplateFormatVersion: "2010-09-09"

# You can use any of these parameters to create conditions or mappings in your template.
Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.
  Name:
    Type: String
    Description: Your workload's name.
    
Resources:
  FetchMigrationTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role that allows execution of Fetch Migration ECS tasks
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'sts:AssumeRole'
            # Limit permission to Copilot TaskRole
            Condition:
              ArnLike:
                aws:PrincipalArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${App}-${Env}-${Name}-TaskRole-*'
      Policies:
        - PolicyName: 'RunFetchMigrationTaskPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - ecs:RunTask
                Effect: Allow
                Resource: 
                  - Fn::ImportValue: "FetchMigrationTaskDefinitionArn"
              - Action:
                # Required as per https://docs.aws.amazon.com/AmazonECS/latest/userguide/task-iam-roles.html
                - iam:PassRole
                Effect: Allow
                Resource: 
                  - Fn::ImportValue: "FetchMigrationTaskRoleArn"
                  - Fn::ImportValue: "FetchMigrationExecutionRoleArn"

Outputs:
  # This will be injected as an environment variable - EXEC_ROLE_ARN
  ExecRoleArn:
    Description: "The ARN of the execution role to be assumed to kick off the Fetch Migration ECS task"
    Value: !GetAtt FetchMigrationTaskExecutionRole.Arn