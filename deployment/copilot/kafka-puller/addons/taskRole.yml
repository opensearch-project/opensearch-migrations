# You can use any of these parameters to create conditions or mappings in your template.
Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.
  Name:
    Type: String
    Description: Your workload's name.
    
Resources:
  MSKConsumerAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allow Fargate container to consume from MSK
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - kafka-cluster:AlterCluster
              - kafka-cluster:Connect
              - kafka-cluster:DescribeCluster
            Effect: Allow
            Resource: arn:aws:kafka:us-east-1:730935383469:cluster/logging-msk-cluster/1d379895-43bd-4f96-932b-52060474aa0f-7
          - Action:
              - kafka-cluster:*Topic*
              - kafka-cluster:ReadData
              - kafka-cluster:WriteData
            Effect: Allow
            Resource: arn:aws:kafka:us-east-1:730935383469:topic/logging-msk-cluster/*
          - Action:
              - kafka-cluster:AlterGroup
              - kafka-cluster:DescribeGroup
            Effect: Allow
            Resource: arn:aws:kafka:us-east-1:730935383469:group/logging-msk-cluster/*

Outputs:
  # 1. You need to output the IAM ManagedPolicy so that Copilot can add it as a managed policy to your ECS task role.
  MSKConsumerAccessPolicyArn:
    Description: "The ARN of the ManagedPolicy to attach to the task role."
    Value: !Ref MSKConsumerAccessPolicy