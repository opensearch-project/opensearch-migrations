{{ $envMountName := "env-vars" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "generic.fullname" . }}
spec:
  replicas: 0
  selector:
    matchLabels:
      app: {{ include "generic.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "generic.fullname" . }}
        env: v1
    spec:
      initContainers:
        {{- include "generic.setupEnvLoadInitContainer" (merge . (dict
           "MountName" $envMountName
           "PositionalArguments" (list "targetUri")
           "include" .Template.Include)) | nindent 8 }}
        - name: wait-for-kafka
          image: bitnami/kubectl:latest  # or any image with curl/kubectl
          command: [ 'sh', '-c',
                     'until kubectl wait --for=condition=Ready kafka/captured-traffic -n {{.Release.Namespace }} --timeout=10s; do echo waiting for kafka cluster is ready; sleep 1; done' ]
      containers:
        - name: replayer
          image: migrations/traffic_replayer:latest
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
            - "-c"
            - |
              echo cat /shared/vars.sh...
              cat /shared/vars.sh
              source /shared/vars.sh
              # Remove leading or trailing space in args file
              sed -i 's/^[ \t]*//;s/[ \t]*$//' /shared/args.txt
              readarray -t arg_array < /shared/args.txt
              echo "Using args from file: ${arg_array[@]}"
              exec /runJavaWithClasspath.sh org.opensearch.migrations.replay.TrafficReplayer "${arg_array[@]}"
          volumeMounts:
            - name: {{ $envMountName }}
              mountPath: /shared
      volumes:
        - name: {{ $envMountName }}
          emptyDir: {}
