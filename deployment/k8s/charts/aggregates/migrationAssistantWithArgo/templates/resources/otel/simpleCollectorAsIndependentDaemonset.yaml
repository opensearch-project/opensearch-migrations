{{- if get .Values.conditionalPackageInstalls "otel-collector-daemonset" }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: otel-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app: otel-collector
spec:
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      serviceAccountName: otel-collector
      containers:
        - name: otel-collector
          image: public.ecr.aws/aws-observability/aws-otel-collector:v0.43.2
          env:
            - name: OTEL_CONFIG_LOG
              value: "true"
            - name: OTEL_LOG_LEVEL
              value: "debug"
          args:
            - "--config=/etc/otel/collector.yaml"
          ports:
            - name: otlp-grpc
              containerPort: 4317
            - name: otlp-http
              containerPort: 4318
            - name: prometheus
              containerPort: 8889
            - name: zpages
              containerPort: 55679
            - name: pprof
              containerPort: 1888
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: otel-collector-config
              mountPath: /etc/otel/
      tolerations:
        - operator: Exists
      volumes:
        - name: otel-collector-config
          configMap:
            name: otel-collector-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: {{ .Release.Namespace }}
data:
  collector.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
    processors:
      batch:
        timeout: 10s
        send_batch_size: 8192
        send_batch_max_size: 10000
    extensions:
      zpages:
        endpoint: :55679
      pprof:
        endpoint: :1888
      health_check:
    exporters:
      debug:
        verbosity: detailed
        sampling_initial: 5
        sampling_thereafter: 200
      awsemf:
        namespace: 'OpenSearchMigrations'
      awsxray:
        index_all_attributes: true
      prometheus:
        endpoint: "0.0.0.0:8889"
        send_timestamps: true
        metric_expiration: 5m
        enable_open_metrics: true
      otlp/jaeger: # Jaeger supports OTLP directly. The default port for OTLP/gRPC is 4317
        endpoint: jaeger-collector:4317
        tls:
          insecure: true
    service:
      extensions: [ zpages, pprof, health_check ]
      pipelines:
        metrics:
          receivers: [ otlp ]
          processors: [ batch ]
          exporters: [ prometheus ]
        traces:
          receivers: [ otlp ]
          processors: [ batch ]
          exporters: [ otlp/jaeger ]
        logs:
          receivers: [ otlp ]
          processors:
          exporters: [ debug ]
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app: otel-collector
spec:
  selector:
    app: otel-collector
  ports:
    - name: otlp-grpc
      port: 4317
      targetPort: otlp-grpc
    - name: otlp-http
      port: 4318
      targetPort: otlp-http
    - name: prometheus
      port: 8889
      targetPort: prometheus
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: otel-collector-monitor
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    app: otel-collector
    release: kube-prometheus-stack
spec:
  selector:
    matchLabels:
      app: otel-collector
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
  endpoints:
    - port: prometheus
      interval: 15s
      path: /metrics
{{- end }}
