// This file is auto-generated by @hey-api/openapi-ts

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
  /**
   * Detail
   */
  detail?: Array<ValidationError>;
};

/**
 * HealthApiResponse
 */
export type HealthApiResponse = {
  /**
   * Checks
   */
  checks: {
    [key: string]: string;
  };
  status: HealthStatus;
};

/**
 * HealthStatus
 */
export type HealthStatus = "ok" | "error";

/**
 * Session
 */
export type Session = {
  /**
   * Name
   */
  name: string;
  /**
   * Created
   */
  created: string;
  /**
   * Updated
   */
  updated: string;
};

/**
 * SessionBase
 */
export type SessionBase = {
  /**
   * Name
   */
  name: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
  /**
   * Location
   */
  loc: Array<string | number>;
  /**
   * Message
   */
  msg: string;
  /**
   * Error Type
   */
  type: string;
};

/**
 * VersionApiResponse
 */
export type VersionApiResponse = {
  /**
   * Version
   */
  version: string;
};

export type SystemHealthData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/system/health";
};

export type SystemHealthResponses = {
  /**
   * Successful Response
   */
  200: HealthApiResponse;
};

export type SystemHealthResponse =
  SystemHealthResponses[keyof SystemHealthResponses];

export type VersionSystemVersionGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/system/version";
};

export type VersionSystemVersionGetResponses = {
  /**
   * Successful Response
   */
  200: VersionApiResponse;
};

export type VersionSystemVersionGetResponse =
  VersionSystemVersionGetResponses[keyof VersionSystemVersionGetResponses];

export type SessionsListData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/sessions/";
};

export type SessionsListResponses = {
  /**
   * Response Sessionslist
   * Successful Response
   */
  200: Array<Session>;
};

export type SessionsListResponse =
  SessionsListResponses[keyof SessionsListResponses];

export type SessionCreateData = {
  body: SessionBase;
  path?: never;
  query?: never;
  url: "/sessions/";
};

export type SessionCreateErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type SessionCreateError = SessionCreateErrors[keyof SessionCreateErrors];

export type SessionCreateResponses = {
  /**
   * Successful Response
   */
  200: Session;
};

export type SessionCreateResponse =
  SessionCreateResponses[keyof SessionCreateResponses];

export type SessionDeleteData = {
  body?: never;
  path: {
    /**
     * Session Name
     */
    session_name: string;
  };
  query?: never;
  url: "/sessions/{session_name}";
};

export type SessionDeleteErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type SessionDeleteError = SessionDeleteErrors[keyof SessionDeleteErrors];

export type SessionDeleteResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type SessionGetData = {
  body?: never;
  path: {
    /**
     * Session Name
     */
    session_name: string;
  };
  query?: never;
  url: "/sessions/{session_name}";
};

export type SessionGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type SessionGetError = SessionGetErrors[keyof SessionGetErrors];

export type SessionGetResponses = {
  /**
   * Response Sessionget
   * Successful Response
   */
  200: Array<Session>;
};

export type SessionGetResponse = SessionGetResponses[keyof SessionGetResponses];

export type SessionUpdateData = {
  /**
   * Data
   */
  body: {
    [key: string]: unknown;
  };
  path: {
    /**
     * Session Name
     */
    session_name: string;
  };
  query?: never;
  url: "/sessions/{session_name}";
};

export type SessionUpdateErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type SessionUpdateError = SessionUpdateErrors[keyof SessionUpdateErrors];

export type SessionUpdateResponses = {
  /**
   * Successful Response
   */
  200: Session;
};

export type SessionUpdateResponse =
  SessionUpdateResponses[keyof SessionUpdateResponses];

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
