plugins {
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '8.2.1'
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    // TODO: Expand to do more static checking in more projects
    if (project.name == "trafficReplayer" || project.name == "trafficCaptureProxyServer") {
        dependencies {
            annotationProcessor group: 'com.google.errorprone', name: 'error_prone_core', version: '2.26.1'
        }
        tasks.named('compileJava', JavaCompile) {
            if (project.name == "trafficReplayer" || project.name == "trafficCaptureProxyServer") {
                options.compilerArgs += [
                        "-XDcompilePolicy=simple",
                        "-Xplugin:ErrorProne -XepDisableAllChecks -Xep:MustBeClosed:ERROR -XepDisableWarningsInGeneratedCode",
                ]
            }
        }
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.owasp.dependencycheck'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(11)
        }
    }

    jacoco {
        toolVersion = '0.8.11'
    }

    tasks.withType(Test) {
        // Getting javadoc to compile is part of the test suite to ensure we are able to publish our artifacts
        dependsOn project.javadoc

        // Provide way to exclude particular tests from CLI
        // e.g. ../gradlew test -PexcludeTests=**/KafkaProtobufConsumerLongTermTest*
        if (project.hasProperty('excludeTests')) {
            exclude project.property('excludeTests')
        }
        useJUnitPlatform {
            //  Disable parallel test execution, see MIGRATIONS-1666
            systemProperty 'junit.jupiter.execution.parallel.enabled', 'false'
        }
        systemProperty 'log4j2.contextSelector', 'org.apache.logging.log4j.core.selector.BasicContextSelector'
        jvmArgs '-ea'
    }

    test {
        systemProperty 'disableMemoryLeakTests', 'true'
        useJUnitPlatform {
            excludeTags 'longTest'
        }
        jacoco {
            enabled = false
        }
    }

    task slowTest(type: Test) {
        systemProperty 'disableMemoryLeakTests', 'false'
        jacoco {
            enabled = true
        }
    }
}

jacocoTestReport {
    dependsOn subprojects*.slowTest
    additionalSourceDirs.from(files(subprojects.sourceSets.main.allSource.srcDirs))
    sourceDirectories.from(files(subprojects.sourceSets.main.allSource.srcDirs))
    classDirectories.from(files(subprojects.sourceSets.main.output))
    executionData.from(subprojects.collect {
        "${it.buildDir}/jacoco/slowTest.exec"
    })

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/protos/**', '**/JMeterLoadTest**'])
        }))
    }

    reports {
        xml.required = true
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
        html.required = true
        html.destination file("${buildDir}/reports/jacoco/test/html")
    }
}
