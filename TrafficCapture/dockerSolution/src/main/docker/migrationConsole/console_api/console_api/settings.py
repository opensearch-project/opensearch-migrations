"""
Django settings for console_api project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
from typing import List
import socket

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# JIRA to improve posture here: https://opensearch.atlassian.net/browse/MIGRATIONS-1741
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-26h*wo1qzffhpum=bn#8d(7e8mo-w9fr6*wdy#%izy#5^85-a9'

# JIRA to improve posture here: https://opensearch.atlassian.net/browse/MIGRATIONS-1741
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


def get_allowed_hosts() -> List[str]:
    hosts = os.getenv('API_ALLOWED_HOSTS', '')
    if not hosts:
        return ['localhost']
    # Add self ip. e.g: 172.18.0.2
    self_ip = socket.gethostbyname(socket.gethostname())
    hosts += ',' + self_ip
    # Remove any quotes and strip extra spacing characters
    hosts = hosts.replace('"', '').replace('\'', '')
    return [host.strip() for host in hosts.split(',')]


ALLOWED_HOSTS = get_allowed_hosts()


# Application definition

INSTALLED_APPS = [
    #'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'rest_framework',
    'django_extensions',
    #'django.contrib.staticfiles',
]

# Django middleware documentation
# https://docs.djangoproject.com/en/5.0/topics/http/middleware/

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'console_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    # The style keyword allows you to specify { for str.format() or $ for string.Template formatting
    'formatters': {
        'default': {
            'format': '{asctime} [{levelname}] {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',  # Set the console handler level
            'class': 'logging.StreamHandler',
            'formatter': 'default',
        }
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',  # Set the root logger level
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',  # Set the Django logger level
            'propagate': False,
        }
    },
}

WSGI_APPLICATION = 'console_api.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
