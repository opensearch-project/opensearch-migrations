plugins {
    id 'base'
    id 'de.undercouch.download' version '5.5.0'
}

def fastApiPort = 8000
def openapiUrl = "http://127.0.0.1:${fastApiPort}/openapi.json"
def serverPidFile = "${buildDir}/fastapi.pid"
def openapiOutFile = "${buildDir}/openapi.json"

def pythonSources = fileTree(dir: projectDir, include: '**/*.py')
def dependencyFiles = files(
    "Pipfile",
    "Pipfile.lock"
).filter { it.exists() }

tasks.register('startFastApiServer') {
    doLast {
        def proc = "pipenv run uvicorn main:app --port ${fastApiPort}".execute()
        logger.info("uvicorn server started, pid: ${proc.pid()}")
        new File(serverPidFile).text = "${proc.pid()}"
    }
}

tasks.register('downloadOpenApiSpec', de.undercouch.gradle.tasks.download.Download) {
    src openapiUrl
    dest openapiOutFile

    inputs.files(pythonSources)
    inputs.files(dependencyFiles)
    outputs.file(openapiOutFile)
}

tasks.register('stopFastApiServer') {
    doLast {
        def pidFile = new File(serverPidFile)
        if (pidFile.exists()) {
            def pid = pidFile.text.trim()
            logger.info("Killing FastAPI server with PID $pid")
            ["kill", pid].execute().waitFor()
            pidFile.delete()
        }
    }
}

tasks.register('fetchOpenApiSpec') {
    dependsOn 'downloadOpenApiSpec'
    finalizedBy 'stopFastApiServer'
    doLast {
        logger.lifecycle("OpenAPI spec downloaded to ${openapiOutFile}")
    }
}
