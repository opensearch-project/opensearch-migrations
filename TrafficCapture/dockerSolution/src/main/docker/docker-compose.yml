version: '3.7'
services:


  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.53.0
    networks:
      - migrations
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--enable-feature=exemplar-storage'

  # Jaeger
  # Found regression with latest tag not being able to connect to port 4317 on docker startup, reverted to '1' tag
  # until resolved
  jaeger:
    image: jaegertracing/all-in-one:1.58.1
    networks:
      - migrations
    ports:
      - "16686:16686"
      - "4317"
      - "4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  grafana:
    image: 'migrations/grafana:latest'
    networks:
      - migrations
    ports:
      - "3000:3000"
    volumes:
      - ./grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  kafka:
    image: apache/kafka:3.7.0
    networks:
      - migrations
    ports:
      - "9092:9092"
    environment:
      # see https://github.com/apache/kafka/blob/3.7/docker/examples/jvm/single-node/plaintext/docker-compose.yml
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://kafka:9092,PLAINTEXT://kafka:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  replayer:
    image: 'migrations/traffic_replayer:latest'
    networks:
      - migrations
    volumes:
      - sharedLogsVolume:/shared-logs-output
    environment:
      - SHARED_LOGS_DIR_PATH=/shared-logs-output/traffic-replayer-default
    depends_on:
      kafka:
        condition: service_started
      opensearchtarget:
        condition: service_started
#   command: /bin/sh -c "/runJavaWithClasspath.sh org.opensearch.migrations.replay.TrafficReplayer --speedup-factor 2 https://opensearchtarget:9200 --auth-header-value Basic\\ YWRtaW46bXlTdHJvbmdQYXNzd29yZDEyMyE= --insecure --kafka-traffic-brokers kafka:9092 --kafka-traffic-topic logging-traffic-topic --kafka-traffic-group-id logging-group-default --otelCollectorEndpoint http://otel-collector:4317  "
    command: /bin/sh -c "/runJavaWithClasspath.sh org.opensearch.migrations.replay.TrafficReplayer --speedup-factor 2 https://opensearchtarget:9200 --auth-header-value Basic\\ YWRtaW46bXlTdHJvbmdQYXNzd29yZDEyMyE= --insecure --kafka-traffic-brokers kafka:9092 --kafka-traffic-topic logging-traffic-topic --kafka-traffic-group-id logging-group-default --otelCollectorEndpoint http://otel-collector:4317 --transformer-config '[{\"TypeMappingSanitizationTransformerProvider\":{\"sourceProperties\":{\"version\":{\"major\":7,\"minor\":10}}}}]'"
  opensearchtarget:
    image: 'opensearchproject/opensearch:2.15.0'
    environment:
      - discovery.type=single-node
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=myStrongPassword123!
    networks:
      - migrations
    ports:
      - "29200:9200"


  migration-console:
    image: 'migrations/migration_console:latest'
    networks:
      - migrations
    volumes:
      - sharedLogsVolume:/shared-logs-output
      - ./migrationConsole/lib/console_link/services.yaml:/etc/migration_services.yaml
      # this is a convenience thing for testing -- it should be removed before this makes it to prod.
      # - ./migrationConsole/lib/console_link:/root/lib/console_link
      - ~/.aws:/root/.aws
    environment:
      - MIGRATION_KAFKA_BROKER_ENDPOINTS=kafka:9092
      - AWS_PROFILE=default
#    command: ./runTestBenchmarks.sh
#    Uncomment below to enable Migration Console API in addition to enable in Dockerfile
#    ports:
#      - "8000:8000"


volumes:
  sharedComparatorSqlResults:
    driver: local
  sharedLogsVolume:
    driver: local
  grafana_data:
    driver: local

networks:
  migrations:
    driver: bridge
