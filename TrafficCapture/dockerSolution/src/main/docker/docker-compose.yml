version: '3.7'
services:


  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    networks:
      - migrations
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--enable-feature=exemplar-storage'

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    networks:
      - migrations
    ports:
      - "16686:16686"
      - "4317"
      - "4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  grafana:
    image: grafana/grafana:latest
    networks:
      - migrations
    ports:
      - "3000:3000"
    volumes:
      - ./grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    networks:
      - migrations
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.6
    networks:
      - migrations
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  replayer:
    image: 'migrations/traffic_replayer:latest'
    networks:
      - migrations
    volumes:
      - sharedReplayerOutput:/shared-replayer-output
    environment:
      - TUPLE_DIR_PATH=/shared-replayer-output/traffic-replayer-default
    depends_on:
      kafka:
        condition: service_started
      opensearchtarget:
        condition: service_started
    command: /bin/sh -c "/runJavaWithClasspath.sh org.opensearch.migrations.replay.TrafficReplayer https://opensearchtarget:9200 --auth-header-value Basic\\ YWRtaW46YWRtaW4= --insecure --kafka-traffic-brokers kafka:9092 --kafka-traffic-topic logging-traffic-topic --kafka-traffic-group-id default-logging-group --otelCollectorEndpoint http://otel-collector:4317"

  opensearchtarget:
    image: 'opensearchproject/opensearch:2.11.0'
    environment:
      - discovery.type=single-node
    networks:
      - migrations
    ports:
      - "29200:9200"

  opensearchanalytics:
    image: 'opensearchproject/opensearch:latest'
    environment:
      - discovery.type=single-node
    networks:
      - migrations
    ports:
      - "39200:9200"

  opensearch-dashboards:
    image: migrations/opensearch_dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - "5601:5601" # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    networks:
      - migrations
    volumes:
      - ./opensearchDashboards/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
    depends_on:
      - opensearchanalytics

#  otel-collector:
#    image: public.ecr.aws/a0w2c5q7/otelcol-with-opensearch:latest
#    container_name: otel-collector
#    ports:
#      - "4317:4317"
#      - "13133:13133"
#    volumes:
#      - ./otelcol/otel-config-debug-only.yaml:/etc/otel-config-debug-only.yaml
#    networks:
#      - migrations
#    depends_on:
#      - opensearchanalytics
#    command: tail -f /dev/null

  migration-console:
    image: 'migrations/migration_console:latest'
    networks:
      - migrations
    volumes:
      - sharedReplayerOutput:/shared-replayer-output
    environment:
      - MIGRATION_KAFKA_BROKER_ENDPOINTS=kafka:9092
#    command: ./runTestBenchmarks.sh

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  sharedComparatorSqlResults:
    driver: local
  sharedReplayerOutput:
    driver: local
  grafana_data:
    driver: local

networks:
  migrations:
    driver: bridge
