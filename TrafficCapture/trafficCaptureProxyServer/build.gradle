/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'org.opensearch.migrations.java-application-conventions'
    id 'io.freefair.lombok'
}

configurations {
    // This is included to load certs and keys.  Doing it again isn't currently worth it.
    opensearchSecurityPlugin
}

dependencies {
    implementation project(":commonDependencyVersionConstraints")

    def openSearch = '2.11.1'
    implementation "org.opensearch.plugin:opensearch-security:${openSearch}.0"
    implementation "org.opensearch:opensearch-common:${openSearch}"
    implementation "org.opensearch:opensearch-core:${openSearch}"
    implementation "org.opensearch:opensearch:${openSearch}"
    opensearchSecurityPlugin "org.opensearch.plugin:opensearch-security:${openSearch}.0"
    implementation files(zipTree("$configurations.opensearchSecurityPlugin.singleFile").matching {
        include "*.jar"
        exclude "slf*.jar"
        exclude "netty*.jar"
    })

    implementation project(':TrafficCapture:captureOffloader')
    implementation project(':TrafficCapture:nettyWireLogging')
    implementation project(':TrafficCapture:captureKafkaOffloader')
    implementation project(':coreUtilities')

    implementation group: 'io.netty', name: 'netty-all'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl'
    implementation group: 'org.slf4j', name: 'slf4j-api'
    implementation group: 'com.lmax', name: 'disruptor'

    implementation group: 'com.beust', name: 'jcommander'
    implementation group: "com.google.protobuf", name: "protobuf-java"

    testImplementation project(':TrafficCapture:captureProtobufs')
    testImplementation testFixtures(project(path: ':testHelperFixtures'))
    testImplementation testFixtures(project(path: ':TrafficCapture:captureOffloader'))
    testImplementation testFixtures(project(path: ':coreUtilities'))
    testImplementation group: 'eu.rekawek.toxiproxy', name: 'toxiproxy-java'
    testImplementation group: 'org.testcontainers', name: 'junit-jupiter'
    testImplementation group: 'org.testcontainers', name: 'kafka'
    testImplementation group: 'org.testcontainers', name: 'testcontainers'
    testImplementation group: 'org.testcontainers', name: 'toxiproxy'
}

tasks.withType(Tar){
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(Zip){
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

application {
    // Define the main class for the application.
    mainClass = 'org.opensearch.migrations.trafficcapture.proxyserver.CaptureProxy'
}
