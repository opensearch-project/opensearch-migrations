"""
Django settings for playground project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import logging
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-sua-k%a1d8s7$!+r4w@jp7q!m-nlpkcmx0dm2cz5y(+-jgn492'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'drf_spectacular',
    'transform_api'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True  # Allow all origins for now (DEBUGGING/DEVELOPMENT ONLY!)

ROOT_URLCONF = 'playground.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'playground.wsgi.application'

# API Spec generation
REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Transformation API',
    'DESCRIPTION': 'API for JSON transformation logic.',
    'VERSION': '0.1.0',
}


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Logging configuration
logging.getLogger("boto3").setLevel(logging.WARNING) # Suppress noisy boto logs
logging.getLogger("botocore").setLevel(logging.WARNING) # Suppress noisy boto logs

os.makedirs('logs', exist_ok=True)  # Ensure logs directory exists

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s',
        },
        'simple': {
            'format': '%(message)s',
        },
    },
    'handlers': {
        'transform_api_debug_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'logs/transform_api.debug.log',
            'formatter': 'verbose',
        },
        'transform_api_info_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/transform_api.info.log',
            'formatter': 'verbose',
        },
        'transform_expert_debug_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'logs/transform_expert.debug.log',
            'formatter': 'verbose',
        },
        'transform_expert_info_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/transform_expert.info.log',
            'formatter': 'verbose',
        },
        'django_debug_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'logs/django.debug.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'transform_api': {
            'handlers': ['transform_api_debug_file', 'transform_api_info_file'],
            'level': 'DEBUG',  # Logs DEBUG and higher for your app
            'propagate': False,  # Prevent log messages from propagating to other loggers
        },
        'transform_expert': {
            'handlers': ['transform_expert_debug_file', 'transform_expert_info_file'],
            'level': 'DEBUG',  # Logs DEBUG and higher for your app
            'propagate': False,  # Prevent log messages from propagating to other loggers
        },
        'django': {
            'handlers': ['django_debug_file'],
            'level': 'DEBUG',  # Logs DEBUG and higher for Django
            'propagate': False,
        },
    },
}
